{"version":3,"sources":["logic.js","redux/actionTypes.js","redux/actionCreator.js","components/Button/Button.js","components/Footer/Footer.js","components/Header/Header.js","components/Buttons/Buttons.js","components/ColumnSection/ColumnSection.js","components/CheckboxBankNote/CheckboxBankNote.js","components/CashItem/CashItem.js","components/Alert/Alert.js","components/Main/Main.js","components/App/App.js","index.js","redux/rootReducer.js"],"names":["getMoneyATM","amountRequired","limits","bankNoteIndex","indexMaxSum","Object","values","reduce","acc","curr","index","arr","sum","findMaxSum","nominals","keys","map","Number","sort","a","b","slice","nominals_limitary","flag","cache","collect","amount","length","updateCountBanknotes","currentNominal","availableNotes","countBanknotes","notesNeeded","Math","floor","numberOfNotes","min","updateFinalAmount","result","res","LimitAmount","c","d","e","f","g","this","note","count","forEach","bankNote","i","ADD_AMOUNT","ADD_AMOUNT_NUMPAD","CLEAN_AMOUNT","REQUIRED_TOTAL_AMOUNT","SELECT_NOTE","UNSELECT_NOTE","SHOW_INFO","GIVEN_MONEY","SHOW_ALERT","UPDATE_BALANCE","cleanAmount","type","requiredTotalAmount","payload","showInfo","givenMoney","showAlert","text","updateBalance","total","ButtonNum","styled","button","props","info","color","connect","state","validInput","getBalance","balance","dispatch","addNumber","num","clean","submitRequiredTotalAmount","updateGivenMoney","data","onClick","ev","target","textContent","moneyForUser","FooterStyle","footer","disabled","HeaderComponent","header","H2","h2","Header","NumPadWrapper","div","Buttons","ColumnWrapper","ColumnSection","children","CheckboxWrapper","Input","input","Label","label","updateSelectedNote","removeSelectedNote","id","onChange","checked","labels","innerHTML","htmlFor","item","AlertWrapper","AlertMain","CloseBtn","Cash","console","log","alertText","showInfoSwitcher","checkCount","entries","MainWrapper","section","Row","FormRequired","form","InputNum","Button","Title","SubTitle","span","FormForDifferentVariansNotes","Legend","legend","Balance","validAmountRequired","alertPermission","onSubmit","preventDefault","firstElementChild","focus","placeholder","pattern","value","val","validity","valid","previousElementSibling","App","GlobalStyle","createGlobalStyle","INITIALSTATE","selectedNotes","store","createStore","action","filter","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd5bc379.chunk.js","sourcesContent":["// Алгоритм работы функции\r\n// в самом наче вызова функции определяется какой купюрой больше всего денег, эта \r\n// купюра будет тратиться самой первой\r\n// также определяются номиналы от вышеупомянутой купюры по убыванию, далее рекурсивно вызывается\r\n// функция collect, в которой определяется достаточность этого прохода для выдачи запрошенной суммы пользователем\r\n// погружение идет до основания рукурсии, \r\n\r\n\r\nexport const getMoneyATM = (amountRequired, limits) => {\r\n    \r\n    let bankNoteIndex = findMaxSum(limits)\r\n    let nominals = Object.keys(limits).map(Number).sort((a,b) => b - a).slice(bankNoteIndex);\r\n    let nominals_limitary = Object.keys(limits).map(Number).sort((a,b) => b - a);\r\n    // Флаг нужен, чтобы переключиться на пограничный случай \r\n    // пограничный случай - когда допустим у нас есть 500:1шт, 100: 10шт, 50: 1шт, \r\n    // пользователь запрашивает 1100р, так как алгорим определяет какой купюрой больше всего денег\r\n    // это 100, то ATM не хватит денег \r\n    let flag = false;\r\n    // в кэше хранятся купюры которые сгорели бы при пограничном случае\r\n    let cache = {}\r\n    function collect (amount, nominals) {\r\n        \r\n        if(amount === 0) return {};\r\n        if(!nominals.length){\r\n            \r\n            flag = true\r\n            limits.updateCountBanknotes(cache);\r\n            return \r\n        };\r\n\r\n        let currentNominal = nominals[0];\r\n        let availableNotes = limits[`+${currentNominal}`].countBanknotes;\r\n        let notesNeeded = Math.floor(amount / currentNominal);\r\n        let numberOfNotes = Math.min(availableNotes,notesNeeded);\r\n\r\n        if (!flag) {\r\n            cache[currentNominal] = numberOfNotes;\r\n        } \r\n\r\n        limits[`+${currentNominal}`] = {...limits[`+${currentNominal}`], countBanknotes: limits[`+${currentNominal}`].countBanknotes - numberOfNotes};\r\n        if(numberOfNotes > 0) {\r\n            limits.updateFinalAmount(currentNominal)\r\n        }\r\n\r\n        let result = collect(amount - numberOfNotes * currentNominal, nominals.slice(1));\r\n\r\n        if(result) {\r\n            return numberOfNotes > 0 ? {[`+${currentNominal}`]: numberOfNotes, ...result} : result \r\n        }\r\n    }\r\n    let res = collect(amountRequired, nominals);\r\n\r\n    return flag ? collect(amountRequired, nominals_limitary) : res\r\n}\r\n\r\n\r\nfunction findMaxSum(limits) {\r\n    let indexMaxSum = ''\r\n    Object.values(limits).reduce((acc,curr,index,arr) => {\r\n\r\n        if (curr.sum > acc)  {\r\n            // ограничение чтобы оставались 50р купюры под конец \r\n            if (curr.sum < 15000 && index === 6) return acc\r\n            indexMaxSum = index\r\n            return curr.sum\r\n        }   \r\n        return acc\r\n    },0)\r\n    return indexMaxSum\r\n}\r\n\r\nexport class LimitAmount {\r\n    constructor(a,b,c,d,e,f,g) {\r\n        this['+5000'] = {\r\n            countBanknotes: g,\r\n            sum: 5000 * g\r\n        };\r\n        this['+2000'] = {\r\n            countBanknotes: f,\r\n            sum: 2000 * f\r\n        };\r\n        this['+1000'] = {\r\n            countBanknotes: e,\r\n            sum: 1000 * e\r\n        };\r\n        this['+500'] = {\r\n            countBanknotes: d,\r\n            sum: 500 * d\r\n        };\r\n        this['+200'] = {\r\n            countBanknotes: c,\r\n            sum: 200 * c\r\n        };\r\n        this['+100'] = {\r\n            countBanknotes: b,\r\n            sum: 100 * b\r\n        };\r\n        this['+50'] = {\r\n            countBanknotes: a,\r\n            sum: 50 * a\r\n        };\r\n    }\r\n    updateFinalAmount (note) {\r\n        this[`+${note}`].sum = note * this[`+${note}`].countBanknotes\r\n    }\r\n    updateCountBanknotes (count) {\r\n        [5000,2000,1000,500,200,100,50].forEach(bankNote => {\r\n            for (let i in count) {\r\n                if (Number(i) === bankNote) {\r\n                    this[`+${bankNote}`].countBanknotes = this[`+${bankNote}`].countBanknotes + count[i]\r\n                    this[`+${bankNote}`].sum = bankNote * this[`+${bankNote}`].countBanknotes\r\n                }\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n\r\n// const limits = new LimitAmount(854,857,696,356,279,147,73);\r\n\r\n\r\n// function getValidAmountRequired () {\r\n//     while (true) {\r\n//         let max = Object.values(limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0)\r\n//         let number = getRandomIntInclusive(0, max)\r\n//         if (number % 50 === 0 || number % 100 === 0) {\r\n//             return number \r\n//         }\r\n//         continue\r\n//     }\r\n// }\r\n\r\n// function getRandomIntInclusive(min, max) {\r\n//     min = Math.ceil(min);\r\n//     max = Math.floor(max);\r\n//     return Math.floor(Math.random() * (max - min + 1)) + min; \r\n// } \r\n\r\n// function checkATMOperation() {\r\n//     let moneyAvailable = true\r\n//     while (moneyAvailable) {\r\n        \r\n//         let amountRequired = getValidAmountRequired();\r\n//         console.log('amountRequired: ', amountRequired);\r\n//         console.log('cash ', getMoneyATM(amountRequired,limits));\r\n//         console.log('limits: ', limits);\r\n//         if(Object.values(limits).reduce((acc, curr) => Number(acc) + Number(curr.countBanknotes),0) < 100) return\r\n//         continue\r\n\r\n//     }\r\n// }\r\n\r\n//   checkATMOperation()","export const ADD_AMOUNT = 'ADD_AMOUNT';\r\nexport const ADD_AMOUNT_NUMPAD = 'ADD_AMOUNT_NUMPAD';\r\nexport const CLEAN_AMOUNT = 'CLEAN_AMOUNT';\r\nexport const REQUIRED_TOTAL_AMOUNT = 'REQUIRED_TOTAL_AMOUNT';\r\nexport const SELECT_NOTE = 'SELECT_NOTE';\r\nexport const UNSELECT_NOTE = 'UNSELECT_NOTE';\r\nexport const SHOW_INFO = 'SHOW_INFO';\r\nexport const GIVEN_MONEY = 'GIVEN_MONEY';\r\nexport const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const UPDATE_BALANCE = 'UPDATE_BALANCE';\r\n","import { \r\n    ADD_AMOUNT, \r\n    CLEAN_AMOUNT, \r\n    REQUIRED_TOTAL_AMOUNT, \r\n    ADD_AMOUNT_NUMPAD, \r\n    SELECT_NOTE, \r\n    UNSELECT_NOTE, \r\n    SHOW_INFO, \r\n    GIVEN_MONEY, \r\n    SHOW_ALERT, \r\n    UPDATE_BALANCE\r\n} from \"./actionTypes\"\r\n\r\nexport const addAmount = (payload) => {\r\n    return  {\r\n        type: ADD_AMOUNT,\r\n        payload\r\n    }\r\n} \r\nexport const addAmountNumPad = (payload) => {\r\n    return  {\r\n        type: ADD_AMOUNT_NUMPAD,\r\n        payload\r\n    }\r\n} \r\nexport const cleanAmount = () => {\r\n    return  {\r\n        type: CLEAN_AMOUNT,\r\n    }\r\n} \r\nexport const requiredTotalAmount = (payload) => {\r\n    return  {\r\n        type: REQUIRED_TOTAL_AMOUNT,\r\n        payload\r\n    }\r\n} \r\nexport const selectNote = (payload) => {\r\n    return  {\r\n        type: SELECT_NOTE,\r\n        payload\r\n    }\r\n} \r\nexport const unselectNote = (payload) => {\r\n    return  {\r\n        type: UNSELECT_NOTE,\r\n        payload\r\n    }\r\n} \r\nexport const showInfo = () => {\r\n    return  {\r\n        type: SHOW_INFO,\r\n    }\r\n} \r\n\r\nexport const givenMoney = (payload) => {\r\n    return  {\r\n        type: GIVEN_MONEY,\r\n        payload\r\n    }\r\n} \r\n\r\nexport const showAlert = (text) => {\r\n    return  {\r\n        type: SHOW_ALERT,\r\n        text\r\n    }\r\n} \r\n\r\nexport const updateBalance = (total) => {\r\n    return  {\r\n        type: UPDATE_BALANCE,\r\n        total\r\n    }\r\n} ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { getMoneyATM } from '../../logic';\r\nimport { addAmountNumPad, cleanAmount, givenMoney, requiredTotalAmount, showAlert, showInfo, updateBalance } from '../../redux/actionCreator';\r\n\r\nconst ButtonNum = styled.button`\r\n    grid-area: num_${(props) => props.info};\r\n    width: 200px;\r\n    height: 50px;\r\n    user-select: none;\r\n    justify-self: center; \r\n    cursor: pointer;\r\n    background-color: ${({color}) => color || 'none'};\r\n`\r\n\r\nconst Button = (props) =>{\r\n\r\n    const clickHandler = (ev) => {\r\n        if (ev.target.textContent === 'Выдать') {\r\n            let moneyForUser = getMoneyATM(props.validInput, props.limits);\r\n            props.submitRequiredTotalAmount(props.validInput);\r\n            props.updateGivenMoney(moneyForUser);\r\n            props.updateBalance(Object.values(props.limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0))\r\n            if (props.getBalance < 50) {\r\n                props.showAlert('Деньги закончились')\r\n                props.clean() \r\n                return\r\n            }\r\n            props.clean()\r\n            return\r\n        }\r\n        if (ev.target.textContent === 'Справка') {\r\n            props.showInfo()\r\n            props.showAlert('Осталось купюр')\r\n            return\r\n        }\r\n        props.addNumber(ev.target.textContent)\r\n    }\r\n\r\n    return (\r\n        <ButtonNum {...props} onClick = { clickHandler }>\r\n            <b>{props.info}</b>\r\n        </ButtonNum>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNumber: (num) => dispatch(addAmountNumPad(num)),\r\n        clean: () => dispatch(cleanAmount()),\r\n        submitRequiredTotalAmount: (total) => dispatch(requiredTotalAmount(total)),\r\n        showInfo: () => dispatch(showInfo()),\r\n        updateGivenMoney: (data) => dispatch(givenMoney(data)),\r\n        updateBalance: (total) => dispatch(updateBalance(total)),\r\n        showAlert: (text) => dispatch(showAlert(text)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        validInput: state.validInput,\r\n        limits: state.limits,\r\n        getBalance: state.balance        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button/Button';\r\n\r\nconst  FooterStyle = styled.footer`\r\n    flex: 0 0 auto;\r\n    height: 100px;\r\n    background-color: #0dcaf0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n`\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <FooterStyle>\r\n            <Button \r\n                info = 'Выдать' \r\n                color = '#489048'\r\n                disabled = {props.showAlert}\r\n            />\r\n            <Button info = 'Справка'  disabled = {props.showAlert}/>\r\n        </FooterStyle>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showAlert: state.showAlert.state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Footer)","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderComponent = styled.header`\r\n    padding: 30px 0 30px;\r\n    background-color: #0dcaf0;\r\n    text-align: center;\r\n    flex: 0 0 auto;\r\n`\r\nconst H2 = styled.h2`\r\n    font-size: 30px;\r\n`\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderComponent>\r\n            <H2>Виртуальный банкомат</H2>\r\n        </HeaderComponent>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button/Button';\r\n\r\nconst NumPadWrapper = styled.div`\r\nmargin-top: 10px;\r\n  display: grid; \r\n  grid-auto-columns: 1fr; \r\n  grid-template-columns: 1fr 1fr 1fr; \r\n  grid-template-rows: 1fr 1fr 1fr 1fr; \r\n  gap: 12px 12px; \r\n  grid-template-areas: \r\n    \"num_1 num_2 num_3\"\r\n    \"num_4 num_5 num_6\"\r\n    \"num_7 num_8 num_9\"\r\n    \"empty_1 num_0 empty_2\"; \r\n\r\n`\r\nconst Buttons = () => {\r\n    return (\r\n        <NumPadWrapper>\r\n            {\r\n                [0,1,2,3,4,5,6,7,8,9].map((num, index) => {\r\n                    return <Button key = {index} info = {num}/>\r\n                }) \r\n            }\r\n        </NumPadWrapper>\r\n        \r\n    )      \r\n        \r\n\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ColumnWrapper = styled.div`\r\n    flex: 1 1 auto;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border: 1.2px solid #00000042;\r\n    background-color: #e2e2e2a1;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst ColumnSection = ({children}) => {\r\n    return ( \r\n        <ColumnWrapper>\r\n            {children}\r\n        </ColumnWrapper>\r\n     );\r\n}\r\n\r\nexport default ColumnSection;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { selectNote, unselectNote } from '../../redux/actionCreator';\r\n\r\nconst CheckboxWrapper = styled.div`\r\n    margin-top: 5px;\r\n`\r\nconst Input = styled.input`\r\n    margin-right: 5px;\r\n    width: 15px;\r\n    height: 15px;\r\n`\r\nconst Label = styled.label`\r\n    font-size: 20px;\r\n    user-select: none;\r\n`\r\n\r\nconst CheckboxBankNote = ({note, num, updateSelectedNote, removeSelectedNote}) => {\r\n\r\n    const checkboxHandler = (ev) => {\r\n        if(ev.target.checked) {\r\n            updateSelectedNote(ev.target.labels[0].innerHTML)\r\n        } else {\r\n            removeSelectedNote(ev.target.labels[0].innerHTML)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CheckboxWrapper>\r\n            <Input \r\n                id = {`ckeckbox${num}`}\r\n                type=\"checkbox\" \r\n                onChange = {checkboxHandler}\r\n            />\r\n            <Label htmlFor = {`ckeckbox${num}`}>{note}</Label>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSelectedNote: (note) => dispatch(selectNote(note)),\r\n        removeSelectedNote: (note) => dispatch(unselectNote(note))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckboxBankNote);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CashItem = ({item, count}) => {\r\n\r\n    return(\r\n        <div>{item}: <span><b>{count}</b></span></div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (props) => {\r\n    return {\r\n        givenMoney: props.givenMoney\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CashItem)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { showAlert, showInfo } from '../../redux/actionCreator';\r\nimport CashItem from '../CashItem/CashItem';\r\n\r\nconst AlertWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #bdf4ff;\r\n    position: relative;\r\n    display: fixed;\r\n` \r\nconst AlertMain = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n`\r\nconst H2 = styled.div`\r\n    text-align: center;\r\n    font-size: 30px;\r\n    user-select: none;\r\n`\r\nconst CloseBtn = styled.div`\r\n    position: absolute;\r\n    right: 32px;\r\n    top: 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n    opacity: 0.3;  \r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n    &::before, &::after{\r\n        position: absolute;\r\n        left: 15px;\r\n        content: ' ';\r\n        height: 33px;\r\n        width: 2px;\r\n        background-color: #333; \r\n    }\r\n    &::before {\r\n        transform: rotate(45deg);\r\n    }\r\n    &::after {\r\n        transform: rotate(-45deg);\r\n}\r\n`\r\nconst Cash = styled.div`\r\n    font-size:20px;\r\n    margin-top: 10px;\r\n    text-align: center;\r\n`\r\n\r\n\r\n\r\nconst Alert = (props) => {\r\n    \r\n    const checkCount = (bankNote) => {\r\n        let count  = 0\r\n        Object.entries(props.limits).forEach(item => {\r\n            if (Number(item[0]) === bankNote) {\r\n                count = `${item[1].countBanknotes}____ Total: ${item[1].sum}`\r\n            }\r\n        })\r\n        return count\r\n    }\r\n    \r\n    return (\r\n        <AlertWrapper>\r\n            <AlertMain>\r\n                <H2>{props.alertText}</H2>\r\n                {props.showInfoSwitcher \r\n                    ? <Cash>\r\n                        {[5000,2000,1000,500,200,100,50].map((item,i) => {\r\n                            return <CashItem \r\n                                    key = {i} \r\n                                    item = {item} \r\n                                    count = {checkCount(item)} \r\n                        />\r\n                        })}\r\n                    </Cash> \r\n                    : ''     \r\n                }\r\n                <CloseBtn onClick = {()=> {\r\n                    props.showAlert();\r\n\r\n                    if (props.showInfoSwitcher) {\r\n                        props.showInfo()\r\n                    }\r\n\r\n                }}/>\r\n            </AlertMain>\r\n        </AlertWrapper>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showAlert: () => dispatch(showAlert()),\r\n        showInfo: () => dispatch(showInfo())\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.showInfo)\r\n    return {\r\n        alertText: state.showAlert.text,\r\n        showInfoSwitcher: state.showInfo,\r\n        limits: state.limits,\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert)","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Buttons from '../Buttons/Buttons';\r\nimport ColumnSection from '../ColumnSection/ColumnSection';\r\nimport CheckboxBankNote from '../CheckboxBankNote/CheckboxBankNote';\r\nimport CashItem from '../CashItem/CashItem';\r\nimport { addAmount, cleanAmount, givenMoney, requiredTotalAmount, showAlert, updateBalance } from '../../redux/actionCreator';\r\nimport { getMoneyATM } from '../../logic';\r\nimport Alert from '../Alert/Alert';\r\n\r\nconst MainWrapper = styled.section`\r\n    flex: 1 0 auto;\r\n    background-color: #a4b9bd4f;\r\n`\r\nconst Row = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    gap: 10px;\r\n` \r\nconst FormRequired = styled.form`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst InputNum = styled.input`\r\n    width: 300px;\r\n    height: 50px;\r\n    border: none;\r\n    padding-left: 10px;\r\n    outline:transparent;\r\n    border-top-left-radius:5px;\r\n    border-bottom-left-radius:5px;\r\n    font-size:20px\r\n    \r\n`\r\nconst Button = styled.button`\r\n    width: 70px;\r\n    height: 50px;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-top-right-radius:5px;\r\n    border-bottom-right-radius:5px;\r\n    background-color: #ff9999;\r\n    &:hover{\r\n        background-color: #cccccc;\r\n    }\r\n`\r\nconst Title = styled.h2`\r\n    font-size: 35px;\r\n    text-align:center;\r\n`\r\nconst SubTitle = styled.span`\r\n    font-size: 15px;\r\n    text-align:center;\r\n`\r\nconst FormForDifferentVariansNotes = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst Legend = styled.legend`\r\n    text-align:center;\r\n    font-size:20px;\r\n    margin-bottom:10px;\r\n`\r\nconst Cash = styled.div`\r\n    font-size:20px;\r\n    margin-top: 10px;\r\n    text-align: center;\r\n`\r\nconst Balance = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: end;\r\n    font-size:20px;\r\n`\r\n\r\nconst Main = (props) => {\r\n\r\n    const updateNumberHandler = (ev) => {\r\n        ev.preventDefault();\r\n        const val = ev.target.value\r\n    \r\n        if (ev.target.validity.valid) {\r\n            props.addNumber(val)\r\n        }\r\n\r\n    }\r\n\r\n    const cleanInputHandler = (ev) => {\r\n        ev.preventDefault();\r\n        props.clean()\r\n        ev.target.previousElementSibling.focus()\r\n    }\r\n    const submitHandler = (ev) => {\r\n        ev.preventDefault()\r\n        if (props.getBalance < 50) {\r\n            props.showAlert('Деньги закончились')\r\n            props.clean() \r\n        }\r\n        if (props.validAmountRequired % 50 === 0) {\r\n            let moneyForUser = getMoneyATM(props.validAmountRequired, props.limits);\r\n            props.submitRequiredTotalAmount(props.validAmountRequired)\r\n            props.updateGivenMoney(moneyForUser)\r\n            props.updateBalance(Object.values(props.limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0))\r\n            props.clean()\r\n        } else {\r\n            ev.target.firstElementChild.focus()\r\n            props.showAlert('Введите сумму кратную 50')\r\n            props.clean()\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n    const checkCount = (bankNote) => {\r\n        if(props.getBalance <= 50) return\r\n        let count  = 0\r\n        Object.entries(props.givenMoney).forEach(item => {\r\n            if (Number(item[0]) === bankNote) {\r\n                count = item[1]\r\n            }\r\n        })\r\n        return count\r\n    }\r\n\r\n    props.updateBalance(Object.values(props.limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0))\r\n\r\n    return (\r\n        <MainWrapper>\r\n            {props.alertPermission\r\n                ? <Alert/>\r\n                : (<Row>\r\n                <ColumnSection>\r\n                    <Title>Введите сумму</Title>\r\n                    <SubTitle>Какую сумму хотите снять?</SubTitle>\r\n                    <FormRequired onSubmit={submitHandler}>\r\n                        <InputNum \r\n                            type='text' \r\n                            placeholder='Введите сумму' \r\n                            pattern='[0-9]*'\r\n                            value = {props.validAmountRequired}\r\n                            onChange = {updateNumberHandler}\r\n                        />\r\n                        <Button\r\n                            onClick={cleanInputHandler}\r\n                            type='button'\r\n                        >\r\n                            Стереть\r\n                        </Button>\r\n                    </FormRequired>\r\n                    <Buttons/>\r\n                </ColumnSection>\r\n                <ColumnSection>\r\n                    <FormForDifferentVariansNotes>\r\n                        <Legend>Выберете <br/> купюры</Legend>\r\n                        {[5000,2000,1000,500,200,100,50].map((note, i)=> {\r\n                            return <CheckboxBankNote \r\n                                            key = {i} \r\n                                            num = {i} \r\n                                            note = {note}/>\r\n                        })}\r\n                    </FormForDifferentVariansNotes>\r\n                </ColumnSection>\r\n                <ColumnSection>\r\n                    <Title>Выдано пользователю</Title>\r\n                    <Cash>\r\n                        {[5000,2000,1000,500,200,100,50].map((item,i) => {\r\n                            return <CashItem \r\n                                        key = {i} \r\n                                        item = {item} \r\n                                        count = {checkCount(item)}/>\r\n                        })}\r\n                    </Cash>\r\n                    <Balance>Остаток:<span><b>{props.getBalance}</b></span></Balance>\r\n                </ColumnSection>\r\n            </Row>)\r\n            }\r\n        </MainWrapper>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        validAmountRequired: state.validInput,\r\n        showInfo: state.showInfo,\r\n        limits: state.limits,\r\n        alertPermission: state.showAlert.state,\r\n        givenMoney: state.givenMoney,\r\n        getBalance: state.balance\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNumber: (num) => dispatch(addAmount(num)),\r\n        clean: () => dispatch(cleanAmount()),\r\n        submitRequiredTotalAmount: (total) => dispatch(requiredTotalAmount(total)),\r\n        updateGivenMoney: (data) => dispatch(givenMoney(data)),\r\n        showAlert: (text) => dispatch(showAlert(text)),\r\n        updateBalance: (total) => dispatch(updateBalance(total))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\r\n\r\n","import React from 'react';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport MainWrapper from '../Main/Main';\n\nconst App = () => {\n  return (\n      <>\n        <Header/>\n        <MainWrapper/>\n        <Footer/>\n      </>\n  )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport App from './components/App/App';\nimport { createGlobalStyle } from 'styled-components';\nimport { rootReducer } from './redux/rootReducer';\nimport { LimitAmount } from './logic';\n\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *:after,\n  *:before {\n    box-sizing: border-box;\n    margin: 0;\n    padding:0;\n} \n\n  html, body {\n    height: 100%;\n  }\n  #root {\n    display:flex;\n    flex-direction: column;\n    height: 100%;\n    margin: 0 auto;\n    max-width: 1440px;\n  }\n`\n\n// Вводить количество купюр по номиналу соответственно 50,100,200,500,1000,2000,5000\nconst limits = new LimitAmount(342,124,2154,4365,2543,562,546);\n\n\nconst INITIALSTATE = {\n  validInput: '',\n  requiredTotalAmount: '',\n  selectedNotes: [],\n  showInfo: false,\n  limits,\n  givenMoney: {},\n  showAlert: {\n    state: false,\n    text: ''\n  },\n  balance: 0\n\n}\n\nconst store = createStore(rootReducer,INITIALSTATE, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <GlobalStyle/>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { ADD_AMOUNT, \r\n        CLEAN_AMOUNT, \r\n        REQUIRED_TOTAL_AMOUNT, \r\n        ADD_AMOUNT_NUMPAD, \r\n        SELECT_NOTE, \r\n        UNSELECT_NOTE, \r\n        SHOW_INFO, \r\n        GIVEN_MONEY,\r\n        SHOW_ALERT,\r\n        UPDATE_BALANCE\r\n} from \"./actionTypes\"\r\n\r\nexport const rootReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_AMOUNT:\r\n            return {...state, validInput: action.payload}\r\n        case ADD_AMOUNT_NUMPAD:\r\n            return {...state, validInput: state.validInput + action.payload}\r\n        case CLEAN_AMOUNT: \r\n            return {...state, validInput: ''}\r\n        case REQUIRED_TOTAL_AMOUNT:\r\n            return {...state, requiredTotalAmount: action.payload}\r\n        case SELECT_NOTE:\r\n            return {...state, selectedNotes: [...state.selectedNotes, action.payload].sort((a,b) => b - a)}\r\n        case UNSELECT_NOTE:\r\n            return {...state, selectedNotes: state.selectedNotes.filter(item => item !== action.payload)}\r\n        case SHOW_INFO:\r\n            return {...state, showInfo: !state.showInfo}\r\n        case GIVEN_MONEY:\r\n            return {...state, givenMoney: action.payload}\r\n        case SHOW_ALERT:\r\n            return {...state, showAlert: {state: !state.showAlert.state, text: action.text}}\r\n        case UPDATE_BALANCE:\r\n            return {...state, balance: action.total}\r\n        default:\r\n            return state\r\n    }\r\n}"],"sourceRoot":""}