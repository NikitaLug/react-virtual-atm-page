{"version":3,"sources":["logic.js","redux/actionTypes.js","redux/actionCreator.js","components/Button/Button.js","components/Footer/Footer.js","components/Header/Header.js","components/Buttons/Buttons.js","components/ColumnSection/ColumnSection.js","components/CheckboxBankNote/CheckboxBankNote.js","components/CashItem/CashItem.js","components/Alert/Alert.js","components/Main/Main.js","components/App/App.js","index.js","redux/rootReducer.js"],"names":["LimitAmount","a","b","c","d","e","f","g","this","countBanknotes","sum","note","count","forEach","bankNote","i","Number","getMoneyATM","amountRequired","limits","nominals","bankNoteIndex","indexMaxSum","Object","values","reduce","acc","curr","index","arr","findIndexMaxSum","entries","sort","map","item","getDescending","keys","slice","nominals_limitary","flag","cache","collect","amount","length","updateCountBanknotes","currentNominal","availableNotes","notesNeeded","Math","floor","numberOfNotes","min","updateFinalAmount","result","res","getMoneyATMWithChosenNotes","listOfBankNotes","findMaxSum","currentValue","console","log","ADD_AMOUNT","ADD_AMOUNT_NUMPAD","CLEAN_AMOUNT","REQUIRED_TOTAL_AMOUNT","SELECT_NOTE","CLEAN_SELECT_NOTE","UNSELECT_NOTE","SHOW_INFO","GIVEN_MONEY","SHOW_ALERT","UPDATE_BALANCE","cleanAmount","type","requiredTotalAmount","payload","cleanSelectNote","showInfo","givenMoney","showAlert","text","updateBalance","total","ButtonNum","styled","button","props","info","color","connect","state","validInput","getBalance","balance","validAmountRequired","selectedNotes","dispatch","addNumber","num","clean","submitRequiredTotalAmount","updateGivenMoney","data","cleanSelectedNote","onClick","ev","target","textContent","moneyForUser","permission","FooterStyle","footer","disabled","HeaderComponent","header","H2","h2","Header","NumPadWrapper","div","Buttons","ColumnWrapper","ColumnSection","children","CheckboxWrapper","Input","input","Label","label","updateSelectedNote","removeSelectedNote","updateCheckboxStatus","id","onChange","checked","labels","innerHTML","htmlFor","AlertWrapper","AlertMain","CloseBtn","Cash","alertText","showInfoSwitcher","checkCount","MainWrapper","section","Row","FormRequired","form","InputNum","Button","Title","SubTitle","span","FormForDifferentVariansNotes","Legend","legend","Balance","alertPermission","onSubmit","preventDefault","firstElementChild","focus","placeholder","pattern","value","val","validity","valid","previousElementSibling","App","GlobalStyle","createGlobalStyle","INITIALSTATE","store","createStore","action","filter","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6104edfe.chunk.js","sourcesContent":["// Алгоритм работы функции\r\n// в самом наче вызова функции определяется какой купюрой больше всего денег, эта \r\n// купюра будет тратиться самой первой\r\n// также определяются номиналы от вышеупомянутой купюры по убыванию, далее рекурсивно вызывается\r\n// функция collect, в которой определяется достаточность этого прохода для выдачи запрошенной суммы пользователем\r\n// погружение идет до основания рукурсии, \r\nexport class LimitAmount {\r\n    constructor(a,b,c,d,e,f,g) {\r\n        this['+5000'] = {\r\n            countBanknotes: g,\r\n            sum: 5000 * g\r\n        };\r\n        this['+2000'] = {\r\n            countBanknotes: f,\r\n            sum: 2000 * f\r\n        };\r\n        this['+1000'] = {\r\n            countBanknotes: e,\r\n            sum: 1000 * e\r\n        };\r\n        this['+500'] = {\r\n            countBanknotes: d,\r\n            sum: 500 * d\r\n        };\r\n        this['+200'] = {\r\n            countBanknotes: c,\r\n            sum: 200 * c\r\n        };\r\n        this['+100'] = {\r\n            countBanknotes: b,\r\n            sum: 100 * b\r\n        };\r\n        this['+50'] = {\r\n            countBanknotes: a,\r\n            sum: 50 * a\r\n        };\r\n    }\r\n    updateFinalAmount (note) {\r\n        this[`+${note}`].sum = note * this[`+${note}`].countBanknotes\r\n    }\r\n    updateCountBanknotes (count) {\r\n        [5000,2000,1000,500,200,100,50].forEach(bankNote => {\r\n            for (let i in count) {\r\n                if (Number(i) === bankNote) {\r\n                    this[`+${bankNote}`].countBanknotes = this[`+${bankNote}`].countBanknotes + count[i]\r\n                    this[`+${bankNote}`].sum = bankNote * this[`+${bankNote}`].countBanknotes\r\n                }\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const getMoneyATM = (amountRequired, limits) => {\r\n    let nominals\r\n    let bankNoteIndex = findIndexMaxSum(limits)\r\n\r\n    if (amountRequired < 20000) {\r\n        nominals = getDescending(limits)\r\n    } else {\r\n        nominals = Object.keys(limits).map(Number).sort((a,b) => b - a).slice(bankNoteIndex);\r\n    }\r\n    let nominals_limitary = Object.keys(limits).map(Number).sort((a,b) => b - a);\r\n\r\n    let flag = false;\r\n    // в кэше хранятся купюры которые сгорели бы при пограничном случае\r\n    let cache = {}\r\n    function collect (amount, nominals) {\r\n        \r\n        if(amount === 0) return {};\r\n        if(!nominals.length){\r\n            \r\n            flag = true\r\n            limits.updateCountBanknotes(cache);\r\n            return \r\n        };\r\n\r\n        let currentNominal = nominals[0];\r\n        let availableNotes = limits[`+${currentNominal}`].countBanknotes;\r\n        let notesNeeded = Math.floor(amount / currentNominal);\r\n        let numberOfNotes = Math.min(availableNotes,notesNeeded);\r\n\r\n        if (!flag) {\r\n            cache[currentNominal] = numberOfNotes;\r\n        } \r\n\r\n        limits[`+${currentNominal}`] = {...limits[`+${currentNominal}`], countBanknotes: limits[`+${currentNominal}`].countBanknotes - numberOfNotes};\r\n        if(numberOfNotes > 0) {\r\n            limits.updateFinalAmount(currentNominal)\r\n        }\r\n\r\n        let result = collect(amount - numberOfNotes * currentNominal, nominals.slice(1));\r\n\r\n        if(result) {\r\n            return numberOfNotes > 0 ? {[`+${currentNominal}`]: numberOfNotes, ...result} : result \r\n        }\r\n    }\r\n    let res = collect(amountRequired, nominals);\r\n\r\n    return flag ? collect(amountRequired, nominals_limitary) : res\r\n}\r\n\r\nfunction findIndexMaxSum(limits) {\r\n    let indexMaxSum = ''\r\n    Object.values(limits).reduce((acc,curr,index,arr) => {\r\n\r\n        if (curr.sum > acc)  {\r\n            // ограничение чтобы оставались 50р купюры под конец \r\n            if (curr.sum < 15000 && index === 6) return acc\r\n            indexMaxSum = index\r\n            return curr.sum\r\n        }   \r\n        return acc\r\n    },0)\r\n    return indexMaxSum\r\n}\r\n\r\nfunction findMaxSum(limits) {\r\n    let max = Object.values(limits).reduce((acc,curr,index,arr) => {\r\n\r\n        return acc + curr.sum\r\n    },0)\r\n    return max\r\n}\r\n\r\nfunction getDescending (limits ) {\r\n    return Object.entries(limits).sort((a,b) => b[1].countBanknotes-a[1].countBanknotes).map(item => Number(item[0])); \r\n}\r\n\r\nexport const getMoneyATMWithChosenNotes = (amountRequired, limits, listOfBankNotes) => {\r\n    if (findMaxSum(limits) < amountRequired) {\r\n        console.log('Недостаточно денег');\r\n        return\r\n    } \r\n    \r\n    let result = {}\r\n    let i = 0\r\n    let currentValue = amountRequired;\r\n    while (true) {\r\n        let currentNominal = Number(listOfBankNotes[i]);\r\n        if (currentValue === 50) {\r\n            result[50] = 1\r\n            break\r\n        }\r\n        if (currentValue - currentNominal >= 0) {\r\n            currentValue -= currentNominal\r\n            result[currentNominal] ? result[currentNominal] +=1 : result[currentNominal] = 1;\r\n\r\n            limits[`+${currentNominal}`] = {...limits[`+${currentNominal}`], countBanknotes: limits[`+${currentNominal}`].countBanknotes - 1};\r\n            limits.updateFinalAmount(currentNominal)\r\n            if (currentValue === 0) break\r\n        } else {\r\n            i++\r\n            if (listOfBankNotes.length === i) {\r\n                i = 0\r\n            }\r\n            continue\r\n        }\r\n\r\n        i++\r\n        if (listOfBankNotes.length === i) {\r\n            i = 0\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\n// __test__\r\n// function getValidAmountRequired () {\r\n//     while (true) {\r\n//         let max = Object.values(limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0)\r\n//         let number = getRandomIntInclusive(0, max)\r\n//         if (number % 50 === 0 || number % 100 === 0) {\r\n//             return number \r\n//         }\r\n//         continue\r\n//     }\r\n// }\r\n\r\n// function getRandomIntInclusive(min, max) {\r\n//     min = Math.ceil(min);\r\n//     max = Math.floor(max);\r\n//     return Math.floor(Math.random() * (max - min + 1)) + min; \r\n// } \r\n\r\n// function checkATMOperation() {\r\n//     let moneyAvailable = true\r\n//     while (moneyAvailable) {\r\n        \r\n//         let amountRequired = getValidAmountRequired();\r\n//         console.log('amountRequired: ', amountRequired);\r\n//         console.log('cash ', getMoneyATM(amountRequired,limits));\r\n//         console.log('limits: ', limits);\r\n//         if(Object.values(limits).reduce((acc, curr) => Number(acc) + Number(curr.countBanknotes),0) < 100) return\r\n//         continue\r\n\r\n//     }\r\n// }\r\n\r\n//   checkATMOperation()","export const ADD_AMOUNT = 'ADD_AMOUNT';\r\nexport const ADD_AMOUNT_NUMPAD = 'ADD_AMOUNT_NUMPAD';\r\nexport const CLEAN_AMOUNT = 'CLEAN_AMOUNT';\r\nexport const REQUIRED_TOTAL_AMOUNT = 'REQUIRED_TOTAL_AMOUNT';\r\nexport const SELECT_NOTE = 'SELECT_NOTE';\r\nexport const CLEAN_SELECT_NOTE = 'CLEAN_SELECT_NOTE';\r\nexport const UNSELECT_NOTE = 'UNSELECT_NOTE';\r\nexport const SHOW_INFO = 'SHOW_INFO';\r\nexport const GIVEN_MONEY = 'GIVEN_MONEY';\r\nexport const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const UPDATE_BALANCE = 'UPDATE_BALANCE';","import { \r\n    ADD_AMOUNT, \r\n    CLEAN_AMOUNT, \r\n    REQUIRED_TOTAL_AMOUNT, \r\n    ADD_AMOUNT_NUMPAD, \r\n    SELECT_NOTE, \r\n    UNSELECT_NOTE, \r\n    SHOW_INFO, \r\n    GIVEN_MONEY, \r\n    SHOW_ALERT, \r\n    UPDATE_BALANCE,\r\n    CLEAN_SELECT_NOTE,\r\n} from \"./actionTypes\"\r\n\r\nexport const addAmount = (payload) => {\r\n    return  {\r\n        type: ADD_AMOUNT,\r\n        payload\r\n    }\r\n} \r\nexport const addAmountNumPad = (payload) => {\r\n    return  {\r\n        type: ADD_AMOUNT_NUMPAD,\r\n        payload\r\n    }\r\n} \r\nexport const cleanAmount = () => {\r\n    return  {\r\n        type: CLEAN_AMOUNT,\r\n    }\r\n} \r\nexport const requiredTotalAmount = (payload) => {\r\n    return  {\r\n        type: REQUIRED_TOTAL_AMOUNT,\r\n        payload\r\n    }\r\n} \r\nexport const selectNote = (payload) => {\r\n    return  {\r\n        type: SELECT_NOTE,\r\n        payload\r\n    }\r\n} \r\nexport const cleanSelectNote = () => {\r\n    return  {\r\n        type: CLEAN_SELECT_NOTE,\r\n        \r\n    }\r\n} \r\nexport const unselectNote = (payload) => {\r\n    return  {\r\n        type: UNSELECT_NOTE,\r\n        payload\r\n    }\r\n} \r\nexport const showInfo = () => {\r\n    return  {\r\n        type: SHOW_INFO,\r\n    }\r\n} \r\n\r\nexport const givenMoney = (payload) => {\r\n    return  {\r\n        type: GIVEN_MONEY,\r\n        payload\r\n    }\r\n} \r\n\r\nexport const showAlert = (text) => {\r\n    return  {\r\n        type: SHOW_ALERT,\r\n        text\r\n    }\r\n} \r\n\r\nexport const updateBalance = (total) => {\r\n    return  {\r\n        type: UPDATE_BALANCE,\r\n        total\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { getMoneyATM, getMoneyATMWithChosenNotes } from '../../logic';\r\nimport { addAmountNumPad, cleanAmount, cleanSelectNote, givenMoney, requiredTotalAmount, showAlert, showInfo, updateBalance } from '../../redux/actionCreator';\r\n\r\nconst ButtonNum = styled.button`\r\n    grid-area: num_${(props) => props.info};\r\n    width: 200px;\r\n    height: 50px;\r\n    user-select: none;\r\n    justify-self: center; \r\n    cursor: pointer;\r\n    background-color: ${({color}) => color || 'none'};\r\n`\r\n\r\nconst Button = (props) =>{\r\n\r\n    const clickHandler = (ev) => {\r\n        if (ev.target.textContent === 'Выдать') {\r\n            let moneyForUser\r\n            if(props.validAmountRequired > props.getBalance) {\r\n                props.showAlert('Введенная вами сумма превышает размеры этого виртуального кошелька')\r\n                return\r\n            }\r\n            if (props.validAmountRequired % 50 !== 0) {\r\n                props.showAlert('Введите сумму кратную 50')\r\n                props.clean()\r\n                return \r\n            }\r\n            if(props.selectedNotes.length !== 0) {\r\n                let permission = false;\r\n                for (let i = 0; i < props.selectedNotes.length; i++) {\r\n                    if (props.validAmountRequired % props.selectedNotes[i] === 0) {\r\n                        permission = true\r\n                    }\r\n                }\r\n                if (permission) {\r\n                    moneyForUser = getMoneyATMWithChosenNotes(\r\n                        props.validAmountRequired, \r\n                        props.limits, \r\n                        props.selectedNotes)\r\n\r\n                    props.cleanSelectedNote()\r\n                } else {\r\n                    props.showAlert('Одна из купюр должна быть кратна запрашиваемой сумме')\r\n                    props.cleanSelectedNote()  \r\n                    return\r\n                }\r\n                 \r\n            } else{\r\n                moneyForUser = getMoneyATM(props.validInput, props.limits);\r\n            }\r\n            \r\n            props.submitRequiredTotalAmount(props.validInput);\r\n            props.updateGivenMoney(moneyForUser);\r\n            props.updateBalance(Object.values(props.limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0))\r\n            if (props.getBalance < 50) {\r\n                props.showAlert('Деньги закончились')\r\n                props.clean() \r\n                return\r\n            }\r\n            props.clean()\r\n            return\r\n        }\r\n        if (ev.target.textContent === 'Справка') {\r\n            props.showInfo()\r\n            props.showAlert('Осталось купюр')\r\n            return\r\n        }\r\n        props.addNumber(ev.target.textContent)\r\n    }\r\n\r\n    return (\r\n        <ButtonNum {...props} onClick = { clickHandler }>\r\n            <b>{props.info}</b>\r\n        </ButtonNum>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNumber: (num) => dispatch(addAmountNumPad(num)),\r\n        clean: () => dispatch(cleanAmount()),\r\n        submitRequiredTotalAmount: (total) => dispatch(requiredTotalAmount(total)),\r\n        showInfo: () => dispatch(showInfo()),\r\n        updateGivenMoney: (data) => dispatch(givenMoney(data)),\r\n        updateBalance: (total) => dispatch(updateBalance(total)),\r\n        showAlert: (text) => dispatch(showAlert(text)),\r\n        cleanSelectedNote: () => dispatch(cleanSelectNote())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        validInput: state.validInput,\r\n        limits: state.limits,\r\n        getBalance: state.balance,\r\n        validAmountRequired: state.validInput, \r\n        selectedNotes: state.selectedNotes       \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button/Button';\r\n\r\nconst  FooterStyle = styled.footer`\r\n    flex: 0 0 auto;\r\n    height: 100px;\r\n    background-color: #0dcaf0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n`\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <FooterStyle>\r\n            <Button \r\n                info = 'Выдать' \r\n                color = '#489048'\r\n                disabled = {props.showAlert}\r\n            />\r\n            <Button info = 'Справка'  disabled = {props.showAlert}/>\r\n        </FooterStyle>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showAlert: state.showAlert.state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Footer)","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderComponent = styled.header`\r\n    padding: 30px 0 30px;\r\n    background-color: #0dcaf0;\r\n    text-align: center;\r\n    flex: 0 0 auto;\r\n`\r\nconst H2 = styled.h2`\r\n    font-size: 30px;\r\n`\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderComponent>\r\n            <H2>Виртуальный банкомат</H2>\r\n        </HeaderComponent>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button/Button';\r\n\r\nconst NumPadWrapper = styled.div`\r\nmargin-top: 10px;\r\n  display: grid; \r\n  grid-auto-columns: 1fr; \r\n  grid-template-columns: 1fr 1fr 1fr; \r\n  grid-template-rows: 1fr 1fr 1fr 1fr; \r\n  gap: 12px 12px; \r\n  grid-template-areas: \r\n    \"num_1 num_2 num_3\"\r\n    \"num_4 num_5 num_6\"\r\n    \"num_7 num_8 num_9\"\r\n    \"empty_1 num_0 empty_2\"; \r\n\r\n`\r\nconst Buttons = () => {\r\n    return (\r\n        <NumPadWrapper>\r\n            {\r\n                [0,1,2,3,4,5,6,7,8,9].map((num, index) => {\r\n                    return <Button key = {index} info = {num}/>\r\n                }) \r\n            }\r\n        </NumPadWrapper>\r\n        \r\n    )      \r\n        \r\n\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ColumnWrapper = styled.div`\r\n    flex: 1 1 auto;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border: 1.2px solid #00000042;\r\n    background-color: #e2e2e2a1;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst ColumnSection = ({children}) => {\r\n    return ( \r\n        <ColumnWrapper>\r\n            {children}\r\n        </ColumnWrapper>\r\n     );\r\n}\r\n\r\nexport default ColumnSection;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { selectNote, unselectNote } from '../../redux/actionCreator';\r\n\r\nconst CheckboxWrapper = styled.div`\r\n    margin-top: 5px;\r\n`\r\nconst Input = styled.input`\r\n    margin-right: 5px;\r\n    width: 15px;\r\n    height: 15px;\r\n`\r\nconst Label = styled.label`\r\n    font-size: 20px;\r\n    user-select: none;\r\n`\r\n\r\nconst CheckboxBankNote = ({note, num, updateSelectedNote, removeSelectedNote, updateCheckboxStatus}) => {\r\n\r\n    const checkboxHandler = (ev) => {\r\n        if(ev.target.checked) {\r\n            updateSelectedNote(ev.target.labels[0].innerHTML)\r\n        } else {\r\n            removeSelectedNote(ev.target.labels[0].innerHTML)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CheckboxWrapper>\r\n            <Input \r\n                id = {`checkbox${num}`}\r\n                type=\"checkbox\" \r\n                onChange = {checkboxHandler}\r\n                \r\n            />\r\n            <Label htmlFor = {`checkbox${num}`}>{note}</Label>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSelectedNote: (note) => dispatch(selectNote(note)),\r\n        removeSelectedNote: (note) => dispatch(unselectNote(note))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckboxBankNote);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CashItem = ({item, count}) => {\r\n\r\n    return(\r\n        <div>{item}: <span><b>{count}</b></span></div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (props) => {\r\n    return {\r\n        givenMoney: props.givenMoney\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CashItem)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { showAlert, showInfo } from '../../redux/actionCreator';\r\nimport CashItem from '../CashItem/CashItem';\r\n\r\nconst AlertWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #bdf4ff;\r\n    position: relative;\r\n    display: fixed;\r\n` \r\nconst AlertMain = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n`\r\nconst H2 = styled.div`\r\n    text-align: center;\r\n    font-size: 30px;\r\n    user-select: none;\r\n`\r\nconst CloseBtn = styled.div`\r\n    position: absolute;\r\n    right: 32px;\r\n    top: 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n    opacity: 0.3;  \r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n    &::before, &::after{\r\n        position: absolute;\r\n        left: 15px;\r\n        content: ' ';\r\n        height: 33px;\r\n        width: 2px;\r\n        background-color: #333; \r\n    }\r\n    &::before {\r\n        transform: rotate(45deg);\r\n    }\r\n    &::after {\r\n        transform: rotate(-45deg);\r\n}\r\n`\r\nconst Cash = styled.div`\r\n    font-size:20px;\r\n    margin-top: 10px;\r\n    text-align: center;\r\n`\r\n\r\n\r\n\r\nconst Alert = (props) => {\r\n    \r\n    const checkCount = (bankNote) => {\r\n        let count  = 0\r\n        Object.entries(props.limits).forEach(item => {\r\n            if (Number(item[0]) === bankNote) {\r\n                count = `${item[1].countBanknotes}____ Total: ${item[1].sum}`\r\n            }\r\n        })\r\n        return count\r\n    }\r\n    \r\n    return (\r\n        <AlertWrapper>\r\n            <AlertMain>\r\n                <H2>{props.alertText}</H2>\r\n                {props.showInfoSwitcher \r\n                    ? <Cash>\r\n                        {[5000,2000,1000,500,200,100,50].map((item,i) => {\r\n                            return <CashItem \r\n                                    key = {i} \r\n                                    item = {item} \r\n                                    count = {checkCount(item)} \r\n                        />\r\n                        })}\r\n                    </Cash> \r\n                    : ''     \r\n                }\r\n                <CloseBtn onClick = {()=> {\r\n                    props.showAlert();\r\n\r\n                    if (props.showInfoSwitcher) {\r\n                        props.showInfo()\r\n                    }\r\n\r\n                }}/>\r\n            </AlertMain>\r\n        </AlertWrapper>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showAlert: () => dispatch(showAlert()),\r\n        showInfo: () => dispatch(showInfo())\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.showInfo)\r\n    return {\r\n        alertText: state.showAlert.text,\r\n        showInfoSwitcher: state.showInfo,\r\n        limits: state.limits,\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert)","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Buttons from '../Buttons/Buttons';\r\nimport ColumnSection from '../ColumnSection/ColumnSection';\r\nimport CheckboxBankNote from '../CheckboxBankNote/CheckboxBankNote';\r\nimport CashItem from '../CashItem/CashItem';\r\nimport { addAmount, cleanAmount, cleanSelectNote, givenMoney, requiredTotalAmount, showAlert, updateBalance } from '../../redux/actionCreator';\r\nimport { getMoneyATM, getMoneyATMWithChosenNotes } from '../../logic';\r\nimport Alert from '../Alert/Alert';\r\n\r\nconst MainWrapper = styled.section`\r\n    flex: 1 0 auto;\r\n    background-color: #a4b9bd4f;\r\n`\r\nconst Row = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    gap: 10px;\r\n` \r\nconst FormRequired = styled.form`\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst InputNum = styled.input`\r\n    width: 300px;\r\n    height: 50px;\r\n    border: none;\r\n    padding-left: 10px;\r\n    outline:transparent;\r\n    border-top-left-radius:5px;\r\n    border-bottom-left-radius:5px;\r\n    font-size:20px\r\n    \r\n`\r\nconst Button = styled.button`\r\n    width: 70px;\r\n    height: 50px;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-top-right-radius:5px;\r\n    border-bottom-right-radius:5px;\r\n    background-color: #ff9999;\r\n    &:hover{\r\n        background-color: #cccccc;\r\n    }\r\n`\r\nconst Title = styled.h2`\r\n    font-size: 35px;\r\n    text-align:center;\r\n`\r\nconst SubTitle = styled.span`\r\n    font-size: 15px;\r\n    text-align:center;\r\n`\r\nconst FormForDifferentVariansNotes = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst Legend = styled.legend`\r\n    text-align:center;\r\n    font-size:20px;\r\n    margin-bottom:10px;\r\n`\r\nconst Cash = styled.div`\r\n    font-size:20px;\r\n    margin-top: 10px;\r\n    text-align: center;\r\n`\r\nconst Balance = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: end;\r\n    font-size:20px;\r\n`\r\n\r\nconst Main = (props) => {\r\n\r\n    const updateNumberHandler = (ev) => {\r\n        ev.preventDefault();\r\n        const val = ev.target.value\r\n    \r\n        if (ev.target.validity.valid) {\r\n            props.addNumber(val)\r\n        }\r\n\r\n    }\r\n\r\n    const cleanInputHandler = (ev) => {\r\n        ev.preventDefault();\r\n        props.clean()\r\n        ev.target.previousElementSibling.focus()\r\n    }\r\n    const submitHandler = (ev) => {\r\n        ev.preventDefault()\r\n        if (props.getBalance < 50) {\r\n            props.showAlert('Деньги закончились')\r\n            props.clean() \r\n        }\r\n        if(props.validAmountRequired > props.getBalance) {\r\n            props.showAlert('Введенная вами сумма превышает размеры этого виртуального кошелька')\r\n            return\r\n        }\r\n        if (props.validAmountRequired % 50 === 0) {\r\n            let moneyForUser\r\n            if(props.selectedNotes.length !== 0) {\r\n                let permission = false\r\n                for (let i = 0; i < props.selectedNotes.length; i++) {\r\n                    if (props.validAmountRequired % props.selectedNotes[i] === 0) {\r\n                        permission = true\r\n                    }\r\n                }\r\n                if (permission) {\r\n\r\n                    moneyForUser = getMoneyATMWithChosenNotes(\r\n                        props.validAmountRequired, \r\n                        props.limits, \r\n                        props.selectedNotes)\r\n\r\n                    props.cleanSelectedNote()\r\n                } else {\r\n                    props.showAlert('Одна из купюр должна быть кратна запрашиваемой сумме')\r\n                    props.cleanSelectedNote()  \r\n                    return\r\n                }\r\n               \r\n\r\n\r\n            } else {\r\n                moneyForUser = getMoneyATM(props.validAmountRequired, props.limits);\r\n            }\r\n            props.submitRequiredTotalAmount(props.validAmountRequired)\r\n            props.updateGivenMoney(moneyForUser)\r\n            \r\n            props.updateBalance(Object.values(props.limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0))\r\n            props.clean()\r\n        } else {\r\n            ev.target.firstElementChild.focus()\r\n            props.showAlert('Введите сумму кратную 50')\r\n            props.clean() \r\n        }\r\n\r\n    }\r\n    \r\n    const checkCount = (bankNote) => {\r\n        if(props.getBalance <= 50) return\r\n        let count  = 0\r\n        Object.entries(props.givenMoney).forEach(item => {\r\n            if (Number(item[0]) === bankNote) {\r\n                count = item[1]\r\n            }\r\n        })\r\n        return count\r\n    }\r\n\r\n    props.updateBalance(Object.values(props.limits).reduce((acc, curr) => Number(acc) + Number(curr.sum),0))\r\n\r\n    return (\r\n        <MainWrapper>\r\n            {props.alertPermission\r\n                ? <Alert/>\r\n                : (<Row>\r\n                <ColumnSection>\r\n                    <Title>Введите сумму</Title>\r\n                    <SubTitle>Какую сумму хотите снять?</SubTitle>\r\n                    <FormRequired onSubmit={submitHandler}>\r\n                        <InputNum \r\n                            type='text' \r\n                            placeholder='Введите сумму' \r\n                            pattern='[0-9]*'\r\n                            value = {props.validAmountRequired}\r\n                            onChange = {updateNumberHandler}\r\n                        />\r\n                        <Button\r\n                            onClick={cleanInputHandler}\r\n                            type='button'\r\n                        >\r\n                            Стереть\r\n                        </Button>\r\n                    </FormRequired>\r\n                    <Buttons/>\r\n                </ColumnSection>\r\n                <ColumnSection>\r\n                    <FormForDifferentVariansNotes>\r\n                        <Legend>Выберете <br/> купюры</Legend>\r\n                        {[5000,2000,1000,500,200,100,50].map((note, i)=> {\r\n                            return <CheckboxBankNote \r\n                                            key = {i} \r\n                                            num = {i} \r\n                                            note = {note}/>\r\n                        })}\r\n                    </FormForDifferentVariansNotes>\r\n                </ColumnSection>\r\n                <ColumnSection>\r\n                    <Title>Выдано пользователю</Title>\r\n                    <Cash>\r\n                        {[5000,2000,1000,500,200,100,50].map((item,i) => {\r\n                            return <CashItem \r\n                                        key = {i} \r\n                                        item = {item} \r\n                                        count = {checkCount(item)}/>\r\n                        })}\r\n                    </Cash>\r\n                    <Balance>Остаток:<span><b>{props.getBalance}</b></span></Balance>\r\n                </ColumnSection>\r\n            </Row>)\r\n            }\r\n        </MainWrapper>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        validAmountRequired: state.validInput,\r\n        showInfo: state.showInfo,\r\n        limits: state.limits,\r\n        alertPermission: state.showAlert.state,\r\n        givenMoney: state.givenMoney,\r\n        getBalance: state.balance,\r\n        selectedNotes: state.selectedNotes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNumber: (num) => dispatch(addAmount(num)),\r\n        clean: () => dispatch(cleanAmount()),\r\n        submitRequiredTotalAmount: (total) => dispatch(requiredTotalAmount(total)),\r\n        updateGivenMoney: (data) => dispatch(givenMoney(data)),\r\n        showAlert: (text) => dispatch(showAlert(text)),\r\n        updateBalance: (total) => dispatch(updateBalance(total)),\r\n        cleanSelectedNote: () => dispatch(cleanSelectNote())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\r\n\r\n","import React from 'react';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport MainWrapper from '../Main/Main';\n\nconst App = () => {\n  return (\n      <>\n        <Header/>\n        <MainWrapper/>\n        <Footer/>\n      </>\n  )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport App from './components/App/App';\nimport { createGlobalStyle } from 'styled-components';\nimport { rootReducer } from './redux/rootReducer';\nimport { LimitAmount } from './logic';\n\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *:after,\n  *:before {\n    box-sizing: border-box;\n    margin: 0;\n    padding:0;\n} \n\n  html, body {\n    height: 100%;\n  }\n  #root {\n    display:flex;\n    flex-direction: column;\n    height: 100%;\n    margin: 0 auto;\n    max-width: 1440px;\n  }\n`\n\n// Вводить количество купюр по номиналу соответственно 50,100,200,500,1000,2000,5000\nconst limits = new LimitAmount(854,857,696,356,279,147,73);\n\n\nconst INITIALSTATE = {\n  validInput: '',\n  requiredTotalAmount: '',\n  selectedNotes: [],\n  showInfo: false,\n  limits,\n  givenMoney: {},\n  showAlert: {\n    state: false,\n    text: ''\n  },\n  balance: 0\n\n}\n\nconst store = createStore(rootReducer,INITIALSTATE, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <GlobalStyle/>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { ADD_AMOUNT, \r\n        CLEAN_AMOUNT, \r\n        REQUIRED_TOTAL_AMOUNT, \r\n        ADD_AMOUNT_NUMPAD, \r\n        SELECT_NOTE, \r\n        UNSELECT_NOTE, \r\n        SHOW_INFO, \r\n        GIVEN_MONEY,\r\n        SHOW_ALERT,\r\n        UPDATE_BALANCE,\r\n        CLEAN_SELECT_NOTE,\r\n} from \"./actionTypes\"\r\n\r\nexport const rootReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_AMOUNT:\r\n            return {...state, validInput: action.payload}\r\n        case ADD_AMOUNT_NUMPAD:\r\n            return {...state, validInput: state.validInput + action.payload}\r\n        case CLEAN_AMOUNT: \r\n            return {...state, validInput: ''}\r\n        case REQUIRED_TOTAL_AMOUNT:\r\n            return {...state, requiredTotalAmount: action.payload}\r\n        case SELECT_NOTE:\r\n            return {...state, selectedNotes: [...state.selectedNotes, action.payload].sort((a,b) => b - a)}\r\n        case CLEAN_SELECT_NOTE:\r\n            return {...state, selectedNotes: []}\r\n        case UNSELECT_NOTE:\r\n            return {...state, selectedNotes: state.selectedNotes.filter(item => item !== action.payload)}\r\n        case SHOW_INFO:\r\n            return {...state, showInfo: !state.showInfo}\r\n        case GIVEN_MONEY:\r\n            return {...state, givenMoney: action.payload}\r\n        case SHOW_ALERT:\r\n            return {...state, showAlert: {state: !state.showAlert.state, text: action.text}}\r\n        case UPDATE_BALANCE:\r\n            return {...state, balance: action.total}\r\n        default:\r\n            return state\r\n    }\r\n}"],"sourceRoot":""}